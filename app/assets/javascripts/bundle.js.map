{"version":3,"sources":["webpack/bootstrap","./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/infinite_tweets.js","./frontend/tweet_compose.js","./frontend/twitter.js","./frontend/users_search.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;;;;;;;;;;;ACtCA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAmB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;ACnDA;AACA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB,KAAK,sBAAsB;AACrE;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc,IAAI,oBAAoB;AAC9D,WAAW,cAAc;AACzB,eAAe,iBAAiB;AAChC;AACA;AACA,QAAQ,SAAS;AACjB;AACA,wBAAwB,cAAc,IAAI,oBAAoB;AAC9D,WAAW,cAAc;AACzB,eAAe,iBAAiB;AAChC;AACA,QAAQ,SAAS;;AAEjB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5EA;AACA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChHA,qBAAqB,mBAAO,CAAC,uDAAoB;AACjD,oBAAoB,mBAAO,CAAC,qDAAmB;AAC/C,qBAAqB,mBAAO,CAAC,uDAAoB;AACjD,uBAAuB,mBAAO,CAAC,2DAAsB;;AAErD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;ACnBD,gBAAgB,mBAAO,CAAC,6CAAe;AACvC,qBAAqB,mBAAO,CAAC,uDAAoB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA,qBAAqB,cAAc;AACnC,mCAAmC,QAAQ;;AAE3C;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./frontend/twitter.js\");\n","const APIUtil = {\n  followUser: id => {\n    return $.ajax({\n      method: 'POST',\n      url: `/users/${id}/follow`,\n      dataType: 'json'\n    });\n  },\n  unfollowUser: id => {\n    return $.ajax({\n      method: 'DELETE',\n      url: `/users/${id}/follow`,\n      dataType: 'json'\n    });\n  },\n  searchUsers: query =>\n    $.ajax({\n      url: '/users/search',\n      type: 'GET',\n      dataType: 'json',\n      data: { query }\n    }),\n  createTweet: data =>\n    $.ajax({\n      url: '/tweets',\n      type: 'POST',\n      dataType: 'json',\n      data\n    }),\n  getTweets: data =>\n    $.ajax({\n      url: '/feed',\n      type: 'GET',\n      dataType: 'json',\n      data\n    })\n};\n\nmodule.exports = APIUtil;\n","const APIUtil = require('./api_util.js');\n\nclass FollowToggle {\n  constructor($el, options) {\n    this.$el = $el;\n    this.userId = $(this.$el).attr('data-user-id') || options.userId;\n    this.followState =\n      $(this.$el).attr('data-initial-follow-state') === 'true'\n        ? 'followed'\n        : 'unfollowed' || options.followState;\n    this.render();\n    $(this.$el).on('click', this.handleClick.bind(this));\n  }\n\n  render() {\n    console.log(this.followState);\n    if (this.followState === 'followed') {\n      $(this.$el).html('Unfollow!');\n    } else if (this.followState === 'unfollowed') {\n      $(this.$el).html('Follow!');\n    }\n    if (this.followState === 'following' || this.followState === 'unfollowing') {\n      $(this.$el).prop('disabled', true);\n    } else {\n      $(this.$el).prop('disabled', false);\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    if (this.followState === 'followed') {\n      // disables button until ajax call completes\n      this.followState = 'unfollowing';\n      this.render();\n      APIUtil.unfollowUser(this.userId).then(data => {\n        // sets follow state and rerenders\n        this.followState = 'unfollowed';\n        this.render();\n      });\n    } else {\n      // disables button until ajax call responds\n      this.followState = 'following';\n      this.render();\n      APIUtil.followUser(this.userId).then(data => {\n        // sets follow state and rerenders\n        this.followState = 'followed';\n        this.render();\n      });\n    }\n  }\n}\nmodule.exports = FollowToggle;\n","/* eslint-disable class-methods-use-this */\nconst APIUtil = require('./api_util.js');\n\nclass InfiniteTweets {\n  constructor($el) {\n    this.$el = $($el);\n    this.lastCreatedAt = null;\n    $(this.$el).on('click', '.fetch-tweets', this.fetchTweets.bind(this));\n    $(this.$el).on('insert-tweet', this.insertTweet.bind(this));\n  }\n\n  fetchTweets(e) {\n    e.preventDefault();\n    const that = this;\n    const data = {};\n    if (this.lastCreatedAt) {\n      data.max_created_at = this.lastCreatedAt;\n    }\n    APIUtil.getTweets(data).then(res => {\n      that.insertTweets(res);\n\n      if (res.length < 20) {\n        that.$el.find('.fetch-tweets').replaceWith(\"<b class='replace-link'> No more tweets </b>\");\n      }\n      if (res.length > 0) {\n        that.lastCreatedAt = res[res.length - 1].created_at;\n      }\n    });\n  }\n\n  insertTweets(data) {\n    // console.log(data);\n    const $ul = this.$el.find('ul#feed-messages-list');\n    $($ul).append(data.map(this.createTweet));\n    $('.hide')\n      .removeClass('hide')\n      .addClass('fetch-tweets');\n  }\n\n  insertTweet(event, data) {\n    const $ul = this.$el.find('ul#feed-messages-list');\n    $($ul).prepend(this.createTweet(data));\n\n    if (!this.lastCreatedAt) this.lastCreatedAt = data.created_at;\n  }\n\n  createTweet(tweet) {\n    // Grab all mentions\n    const mentions = tweet.mentions\n      .map(\n        mention =>\n          `<li>\n        <a href='/users/${mention.user.id}'>@${mention.user.username}</a>\n        </li>`\n      )\n      .join('');\n    // creates two possible strings for output - removing the Mentions: paragraph element if no mentions are present\n    const tweetWithMention = `<div class='tweet'>\n      <a href='/users/${tweet.user.id}'>${tweet.user.username}</a>\n      <p>${tweet.content}</p>\n      <small>${tweet.created_at}</small>\n      <ul>\n      <p>Mentions:</p>\n      ${mentions}</ul>`;\n    const tweetWithoutMention = `<div class='tweet'>\n      <a href='/users/${tweet.user.id}'>${tweet.user.username}</a>\n      <p>${tweet.content}</p>\n      <small>${tweet.created_at}</small>\n      <ul>\n      ${mentions}</ul>`;\n\n    const tweetDiv = mentions.length > 0 ? tweetWithMention : tweetWithoutMention;\n    return $(tweetDiv);\n  }\n}\n\nmodule.exports = InfiniteTweets;\n","/* eslint-disable class-methods-use-this */\nconst APIUtil = require('./api_util.js');\n\nclass TweetCompose {\n  constructor($el) {\n    this.$el = $($el);\n    this.$textarea = $(this.$el.find('textarea'));\n    this.$addMentionButton = this.$el.find('.mentions .add-mention');\n    this.$el.on('submit', this.submit.bind(this));\n    this.$textarea.on('input', this.updateCounter.bind(this));\n    this.$addMentionButton.on('click', this.newUserSelect.bind(this));\n    $(this.$el.find('.mentions')).on(\n      'click',\n      '.remove-mention',\n      this.removeMentionedUser.bind(this)\n    );\n    this.updateCounter();\n  }\n\n  submit(e) {\n    e.preventDefault();\n    const formData = this.$el.serializeJSON();\n    console.log(formData);\n    // disables all inputs while we try to add to DB\n    this.$el.find(':input').prop('disabled', true);\n    // sends form data to ajax call\n    APIUtil.createTweet(formData)\n      .then(data => {\n        this.handleSuccess(data);\n      })\n      .fail(err => {\n        // disables the disabled prop so a user can fix any mistakes - does not clear input so user will not lose progress - logs the error for dev purposes\n        this.$el.find(':input').prop('disabled', false);\n        console.log(err);\n      });\n  }\n\n  clearInput() {\n    // clears input fields\n    this.$el.find('textarea').val('');\n    this.$el.find('select').val('');\n  }\n\n  handleSuccess(data) {\n    // disables the disabled property clears our input fields and prepends the new li to the list of tweets\n    this.$el.find(':input').prop('disabled', false);\n    this.clearInput();\n    $('#feed-messages-list').trigger('insert-tweet', data);\n    // const $ul = $(this.$el.attr('data-tweets-ul'));\n    // const $li = $('<li></li>');\n    // $ul.prepend($li.append(JSON.stringify(data)));\n  }\n\n  updateCounter() {\n    // grab textarea and the counter\n    const $textarea = this.$el.find('textarea');\n    const $counter = this.$el.find('.chars-left');\n    // counts characters inside textarea\n    let charsLeft = $($textarea).val().length;\n    // resets the character count for each input event\n    $($counter).text('');\n    $($counter).text(`${charsLeft}/140`);\n    // if the user hits 140 or more characters we will keep setting the first 140 chars using substring and insert them essentially stopping a user from adding more\n    if (charsLeft >= 140) {\n      $($textarea).val(\n        $($textarea)\n          .val()\n          .substring(0, 139)\n      );\n    }\n  }\n\n  newUserSelect(e) {\n    e.preventDefault();\n    // link used to remove this mention field\n    const $removeMention = $('<a>')\n      .attr('href', '#')\n      .text('--Remove mention--')\n      .addClass('remove-mention');\n    // parent div that contains all elements of a added mention field\n    const $mentionDiv = $('<div>');\n    const $select = $('<select>').attr('name', 'tweet[mentioned_user_ids][]');\n    // parent of our container - holds all divs with seperate selects for mentions along with link to remove\n    const $mentionList = $(`.mentions`);\n    // generates a new select field with options to choose each user - users stored in window.users global variable\n    window.users.forEach(user => {\n      $($mentionDiv).append(\n        $select.append(\n          $('<option>')\n            .attr('value', user.id)\n            .html(user.username)\n        )\n      );\n    });\n    // adds 53px of height to account for the 53px container div (<select> with <a> tag to remove the select)\n    $('.feed-form').css('height', '+=53px');\n    $mentionDiv.append($removeMention);\n    $mentionDiv.appendTo($mentionList);\n  }\n\n  removeMentionedUser(e) {\n    // removes a div containing our generated select field and removal link\n    e.preventDefault();\n    // listens on parent .mentions and targets .remove-mention's parent element which is the generated div\n    $(e.currentTarget)\n      .parent()\n      .remove();\n    // reduces the size of the form that is added when we add a new mention field\n    $('.feed-form').css('height', '-=53px');\n  }\n}\n\nmodule.exports = TweetCompose;\n","const FollowToggle = require('./follow_toggle.js');\nconst UsersSearch = require('./users_search.js');\nconst TweetCompose = require('./tweet_compose.js');\nconst InfiniteTweets = require('./infinite_tweets.js');\n\n$(() => {\n  // creates a FollowToggle instance for each .follow-toggle button\n  $('.follow-toggle').each(function(i, ele) {\n    new FollowToggle(ele);\n  });\n  $('.users-search').each(function(i, ele) {\n    new UsersSearch(ele);\n  });\n  $('.tweet-compose').each(function(i, ele) {\n    new TweetCompose(ele);\n  });\n  $('.infinite-tweets').each(function(i, ele) {\n    new InfiniteTweets(ele);\n  });\n});\n","const APIUtil = require('./api_util.js');\nconst FollowToggle = require('./follow_toggle.js');\n\nclass UsersSearch {\n  constructor($el) {\n    this.$el = $($el);\n    this.$searchField = this.$el.find('input.search-field');\n    this.$userList = this.$el.find('ul.users');\n    $(this.$searchField).on('keyup', this.handleKeypress.bind(this));\n  }\n\n  handleKeypress(e) {\n    APIUtil.searchUsers(this.$searchField.val()).then(users => {\n      this.generateUsers(users);\n    });\n  }\n\n  generateUsers(users) {\n    this.$userList.empty();\n    for (let i = 0; i < users.length; i++) {\n      const user = users[i];\n      const $a = $('<a></a>');\n      $($a).text(`@${user.username}`);\n      $($a).attr('href', `/users/${user.id}/`);\n\n      const $li = $('<li></li>');\n      const $followToggle = $('<button></button>');\n\n      new FollowToggle($followToggle, {\n        userId: user.id,\n        followState: user.followed ? 'followed' : 'unfollowed'\n      });\n\n      $($li).append($a);\n      $($li).append($followToggle);\n      this.$userList.append($li);\n    }\n  }\n}\n\nmodule.exports = UsersSearch;\n"],"sourceRoot":""}